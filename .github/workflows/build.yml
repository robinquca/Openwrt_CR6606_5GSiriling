name: Build OpenWrt Firmware

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: stable
  CONFIG_FILE: configs/5G.config
  DIY_SH: scripts/simplify.sh
  KMODS_IN_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: self-hosted
    outputs:
      OPENWRTROOT: ${{ steps.setenv.outputs.OPENWRTROOT }}
      PLATFORM: ${{ steps.compile.outputs.PLATFORM }}
      TARGET: ${{ steps.compile.outputs.TARGET }}
      SUBTARGET: ${{ steps.compile.outputs.SUBTARGET }}
      FIRMWARE: ${{ steps.compile.outputs.FIRMWARE }}
      GENERATE_STATUS: ${{ steps.generate.outputs.GENERATE_STATUS }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Clone Source Code
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt

    - name: Set Environment Variable
      id: setenv
      run: |
        echo "OPENWRTROOT=$PWD/openwrt" >> $GITHUB_ENV
        echo "OPENWRTROOT=$PWD/openwrt" >> $GITHUB_OUTPUT

    - name: Update Feeds
      run: |
        cd openwrt
        mkdir -p customfeeds
        chmod +x ../scripts/*.sh
        ../scripts/hook-feeds.sh

    - name: Install Feeds
      run: |
        cd openwrt
        ./scripts/feeds install -a

    - name: Load Custom Configuration
      run: |
        cd openwrt
        [ -e ../files ] && mv ../files ./files
        [ -e ../$CONFIG_FILE ] && cp ../$CONFIG_FILE .config
        chmod +x ../scripts/*.sh
        ../$DIY_SH
        make defconfig

    - name: Download Package
      run: |
        cd openwrt
        cat .config
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile Packages
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make tools/compile -j$(nproc) || make tools/compile -j$(nproc)
        make toolchain/compile -j$(nproc) || make toolchain/compile -j$(nproc)
        make target/compile -j$(nproc) || make target/compile -j$(nproc) IGNORE_ERRORS=1
        make diffconfig
        make package/compile -j$(nproc) IGNORE_ERRORS=1 || make package/compile -j$(nproc) IGNORE_ERRORS=1
        make package/index

        cd bin/packages/*
        PLATFORM=$(basename `pwd`)
        echo "PLATFORM=$PLATFORM" >> $GITHUB_OUTPUT

        cd ../../targets/*
        TARGET=$(basename `pwd`)
        echo "TARGET=$TARGET" >> $GITHUB_OUTPUT

        cd *
        SUBTARGET=$(basename `pwd`)
        echo "SUBTARGET=$SUBTARGET" >> $GITHUB_OUTPUT
        echo "FIRMWARE=$PWD" >> $GITHUB_OUTPUT
        echo "COMPILE_STATUS=success" >> $GITHUB_ENV

    - name: Generate Firmware
      id: generate
      if: env.COMPILE_STATUS == 'success'
      run: |
        if [ -d ../configs/opkg ]; then
          cd ../configs/opkg
          sed -i "s/subtarget/$SUBTARGET/g" distfeeds*.conf
          sed -i "s/target\//$TARGET\//g" distfeeds*.conf
          sed -i "s/platform/$PLATFORM/g" distfeeds*.conf
        fi

        cd $OPENWRTROOT
        mkdir -p files/etc/uci-defaults/
        cp ../scripts/init-settings.sh files/etc/uci-defaults/99-init-settings
        make package/install -j$(nproc) || make package/install -j1 V=s
        make target/install -j$(nproc) || make target/install -j1 V=s
        make checksum
        echo "GENERATE_STATUS=success" >> $GITHUB_OUTPUT

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d")-Lean" >> $GITHUB_OUTPUT
        echo "release_date=$(date +"%Y.%m.%d")" >> $GITHUB_OUTPUT
        touch release.txt
        echo "## 🗒️ 固件信息" >> release.txt
        echo "- 🔗 后台地址：192.168.10.1" >> release.txt
        echo "- 🔑 后台密码：password" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware artifact
      uses: actions/upload-artifact@v4
      with:
        name: firmware-bin
        path: openwrt/bin/

